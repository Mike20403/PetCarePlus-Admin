name: Deploy to Netlify

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  deployments: write
  statuses: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Validate Netlify configuration
        run: |
          if [ ! -f netlify.toml ]; then
            echo "Error: netlify.toml file is missing"
            exit 1
          fi
          echo "Netlify configuration validated"

      - name: Ensure SPA routing configuration
        run: |
          mkdir -p public
          echo "/* /index.html 200" > public/_redirects
          echo "SPA routing configuration created"

      - name: Type check
        run: pnpm run type-check

      - name: Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build
        env:
          VITE_APP_NAME: ${{ secrets.VITE_APP_NAME || 'PetCare+ Admin Dashboard' }}
          VITE_APP_ENV: production
          VITE_APP_VERSION: ${{ secrets.VITE_APP_VERSION || '1.0.0' }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_API_TIMEOUT: ${{ secrets.VITE_API_TIMEOUT || '15000' }}
          VITE_DEBUG: false
          VITE_LOG_LEVEL: error
          VITE_ENABLE_MOCK_DATA: false
          VITE_ENABLE_DEV_TOOLS: false
          VITE_ENABLE_HTTPS: true
          VITE_CORS_ENABLED: false
          VITE_AUTH_TOKEN_REFRESH: true
          VITE_AUTH_TOKEN_STORAGE: localStorage
          VITE_SESSION_TIMEOUT: ${{ secrets.VITE_SESSION_TIMEOUT || '3600' }}
          VITE_API_RETRY_ATTEMPTS: ${{ secrets.VITE_API_RETRY_ATTEMPTS || '5' }}
          VITE_API_RETRY_DELAY: ${{ secrets.VITE_API_RETRY_DELAY || '2000' }}
          VITE_MAX_FILE_SIZE: ${{ secrets.VITE_MAX_FILE_SIZE || '10485760' }}
          VITE_ALLOWED_FILE_TYPES: ${{ secrets.VITE_ALLOWED_FILE_TYPES || 'image/jpeg,image/png,image/gif,application/pdf' }}

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: Build failed to generate dist directory"
            exit 1
          fi
          echo "Build output verified"

      # Deploy to Netlify for production (main branch)
      - name: Deploy to Netlify (production)
        if: github.ref == 'refs/heads/main'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Production deploy from GitHub Actions'
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5

      # Deploy preview for pull requests
      - name: Deploy to Netlify (preview)
        if: github.event_name == 'pull_request'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Preview deploy from GitHub Actions PR #${{ github.event.number }}'
          alias: pr-${{ github.event.number }}
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5